apiVersion: apps/v1
kind: Deployment
metadata:
  name: webapp-deployment
  labels:
    app: webapp
spec:
  replicas: 3
  selector:
    matchLabels:
      app: webapp
  minReadySeconds: 5
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  template:
    metadata:
      labels:
        app: webapp
    spec:
      containers:
      - name: webapp
        image: bootacr.azurecr.io/weight/app:latest
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 250m
            memory: 256Mi
        ports:
        - containerPort: 8080
#        readinessProbe:
#          httpGet:
#            path: /
#            port: 8080
#          initialDelaySeconds: 5
#          periodSeconds: 5
#          successThreshold: 1
        lifecycle:
          postStart:
            exec:
              command: [ "/bin/sh", "-c", "npm run initdb" ]
        envFrom:
        - secretRef:
            name: web-secret
---
apiVersion: v1
kind: Service
metadata:
  name: web-service
spec:
  type: ClusterIP
  selector:
    app: webapp
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080
#      nodePort: 30100 # This is for service type NodePort
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: app-ingress
  namespace: default
  annotations:
    kubernetes.io/ingress.class: "nginx"
spec:
  #  ingressClassName: nginx-example
  rules:
    - http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: web-service
                port:
                  number: 8080
