trigger:
- main
- feature/*
resources:
- repo: self
  clean: true
################################################### Staging docker image starts here
stages:
- stage: Build_Dockerfile_Staging
  variables:
  - group: staging
  displayName: Dockerfile build and push (staging)
  jobs:
  - job: Docker_Image
    displayName: Creating the Docker image
    pool:
      name: staging      
    steps:
    - checkout: self
      clean: true
    - task: PowerShell@2
      inputs:
        targetType: 'inline'
        script: |
             Set-Content ./.env "
             PORT=8080
             HOST=0.0.0.0
             COOKIE_ENCRYPT_PWD=superAwesomePasswordStringThatIsAtLeast32CharactersLong!
             NODE_ENV=development
             OKTA_ORG_URL=https://dev79904368.okta.com"
      displayName: 'Creating .env file (Staging)'
    - task: Docker@2
      inputs:
        containerRegistry: 'bootacr'
        repository: 'weight/staging'
        command: 'buildAndPush'
        Dockerfile: '**/Dockerfile'
        tags: '1.0.$(Build.BuildId)'
############################################################# Deploying Staging Docker container
- stage: Deploy_Dockerfile_Staging
  condition: and(succeeded(), eq(variables['build.sourceBranch'], 'refs/heads/main'))
  variables:
  - group: staging
  displayName: Run Ansible to deploy docker image/container
  jobs:
  - job: Ansible
    displayName: Ansible
    pool:
      name: staging      
    steps:
    - task: Bash@3
      inputs:
        targetType: 'inline'
        script: |
          echo "[servers]
          server1 ansible_host=10.0.0.4
          server2 ansible_host=10.0.0.5
          server3 ansible_host=10.0.0.6

          [servers:vars]
          ansible_python_interpreter=/usr/bin/python3
          ansible_connection=ssh
          ansible_user=ubuntu
          ansible_ssh_pass=$(staging_web_pass)
          env=staging
          tag=1.0.$(Build.BuildId)
          registry=$(reg_uri)
          username=$(reg_username)
          password=$(reg_password)" > $(Build.SourcesDirectory)/ansible/inv.ini
      displayName: Creating the inv file
    # - task: Ansible@0
    #   inputs:
    #     ansibleInterface: 'agentMachine'
    #     playbookPathOnAgentMachine: '$(Build.SourcesDirectory)/ansible/playbook.yaml'
    #     inventoriesAgentMachine: 'file'
    #     inventoryFileOnAgentMachine: '$(Build.SourcesDirectory)/ansible/inv.ini'
    - task: Bash@3
      inputs:
        targetType: 'inline'
        script: |
          ansible-playbook playbook.yaml -i inv.ini
        workingDirectory: $(Build.SourcesDirectory)/ansible/
      displayName: Deploying the staging container