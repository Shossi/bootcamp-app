trigger:
- main
- feature/*
resources:
- repo: self
  clean: true
stages:
- stage: Build_Dockerfile
  variables:
  - group: prod
  displayName: Dockerfile build and push
  jobs:
  - job: Docker_Image
    displayName: Creating the Docker image
    pool:
      name: prod      
    steps:
    - checkout: self
      clean: true
    - task: PowerShell@2
      inputs:
        targetType: 'inline'
        script: |
             Set-Content ./.env "
             PORT=8080
             HOST=0.0.0.0
             NODE_ENV=development
             OKTA_ORG_URL=https://dev79904368.okta.com"
      displayName: 'Creating .env file'
    - task: Docker@2
      inputs:
        containerRegistry: 'bootacr'
        repository: 'weight/app'
        command: 'buildAndPush'
        Dockerfile: '**/Dockerfile'
        tags: '1.0.$(Build.BuildId)'
############################################################# Deploying Staging Docker container
- stage: Deployment
  condition: and(succeeded(), eq(variables['build.sourceBranch'], 'refs/heads/main'))
  variables:
  - group: prod
  displayName: Create Secret
  jobs:
  - job: Deployment
    displayName: Deployment
    pool:
      name: prod      
    steps:
    - task: KubernetesManifest@0
      inputs:
        action: 'createSecret'
        kubernetesServiceConnection: 'k8s'
        namespace: default
        secretType: 'generic'
        secretName: 'web-secret'
        secretArguments: |
         --from-literal=COOKIE_ENCRYPT_PWD=$(COOKIE)
         --from-literal=HOST_URL=$(HOST_URL)
         --from-literal=OKTA_CLIENT_ID=$(OKTA_ID)
         --from-literal=OKTA_CLIENT_SECRET=$(OKTA_SECRET)
         --from-literal=PGDATABASE=$(PGDATABASE)
         --from-literal=PGHOST=$(PGHOST)
         --from-literal=PGPASSWORD=$(PGPASSWORD)
         --from-literal=PGPORT=$(PGPORT)
         --from-literal=PGUSERNAME=$(PGUSERNAME) 
    - task: KubernetesManifest@0
      displayName: Create imagePullSecret
      inputs:
        action: 'createSecret'
        kubernetesServiceConnection: 'k8s'
        secretType: 'dockerRegistry'
        secretName: 'web-secret'
        dockerRegistryEndpoint: 'bootacr'
    - task: KubernetesManifest@0
      inputs:
        action: 'deploy'
        kubernetesServiceConnection: 'k8s'
        namespace: 'default'
        manifests: '$(Build.SourcesDirectory)/k8s/manifests/webapp.yaml'
        containers: 'bootacr.azurecr.io/weight/app:1.0.$(Build.BuildId)'
        imagePullSecrets: 'web-secret' 